import telebot
from telebot import types
from telebot.types import ReplyKeyboardMarkup

bot = telebot.TeleBot("7594349419:AAE1Lk-D5fqTu5jFUsZKj8nYnqpRiv71Wg0")

#start
@bot.message_handler(commands=["start"])
def start(message):
    markup = types.InlineKeyboardMarkup()

    reklama_button = types.InlineKeyboardButton("–†–µ–∫–ª–∞–º–∞üìÑ", callback_data="reklama")
    markup.row(reklama_button)

    bust_button = types.InlineKeyboardButton("–ë—É—Å—ÇüèÜ", callback_data="bust")
    prokachka_button = types.InlineKeyboardButton("–ü—Ä–æ–∫–∞—á–∫–∞üîù", callback_data="prokachka")
    markup.row(bust_button, prokachka_button)

    otzivi_button = types.InlineKeyboardButton("–û—Ç–∑—ã–≤—ãüìù", url="https://t.me/hunter_1508")
    help_button = types.InlineKeyboardButton("–ü–æ–º–æ—â—åüÜò", callback_data="help")
    markup.row(otzivi_button, help_button)

    bot.send_message(message.chat.id, f"Hello, <b>{message.from_user.first_name}</b> üòÉ", parse_mode="html", reply_markup=markup)

@bot.callback_query_handler(func=lambda callback: True)
def first_message(callback):

    markup2 = types.InlineKeyboardMarkup()

    buy_button = types.InlineKeyboardButton("–ö—É–ø–∏—Ç—åüíµ", url="https://t.me/hunter_1508")
    markup2.row(buy_button)

    exit_button = types.InlineKeyboardButton("–ù–∞–∑–∞–¥üîô", callback_data="exit")
    markup2.row(exit_button)

    markup3 =  types.InlineKeyboardMarkup()

    kirill_help = types.InlineKeyboardButton("–ü–æ–∫—É–ø–∫–æ–πüí≥", url="https://t.me/hunter_1508")
    help_withbot = types.InlineKeyboardButton("–ë–æ—Ç–æ–ºü§ñ", url="https://t.me/zeevvaa")

    markup3.row(kirill_help, help_withbot,)

    markup3.row(exit_button)

    if callback.data == "reklama":
        bot.edit_message_text("<b><u>üìÑ–†–µ–∫–ª–∞–º–∞</u></b>:\n‚≠êÔ∏è15 –∑–≤–µ–∑–¥ - —Ä–µ–∫–ª–∞–º–Ω—ã–π –ø–æ—Å—Ç –Ω–∞ <b>1,5 —á–∞—Å–∞</b>\n‚≠êÔ∏è25 –∑–≤—ë–∑–¥ - —Ä–µ–∫–ª–∞–º–Ω—ã–π –ø–æ—Å—Ç –Ω–∞ <b>3 —á–∞—Å–∞</b>\n‚≠êÔ∏è40 –∑–≤—ë–∑–¥ - —Ä–µ–∫–ª–∞–º–Ω—ã–π –ø–æ—Å—Ç –Ω–∞ <b>–¥–µ–Ω—å</b>\n‚≠êÔ∏è55 –∑–≤—ë–∑–¥ - —Ä–µ–∫–ª–∞–º–Ω—ã–π –ø–æ—Å—Ç –Ω–∞ <b>–¥–≤–∞ –¥–Ω—è</b>\n‚≠êÔ∏è150 –∑–≤—ë–∑–¥ - —Ä–µ–∫–ª–∞–º–Ω—ã–π –ø–æ—Å—Ç <b>–Ω–∞–≤—Å–µ–≥–¥–∞</b>\n<b>–û—Ç–∑—ã–≤—ã: @cabinReviews</b>", callback.message.chat.id, callback.message.message_id, reply_markup=markup2, parse_mode="html")

    elif callback.data == "bust":
        bot.edit_message_text("<b><u>üèÜ–ë—É—Å—Ç</u></b>:\n–ë—É—Å—Ç –∑–∞–≤–∏—Å–∏—Ç –æ—Ç <b>–±–æ–π—Ü–∞</b>, —Ç–æ—á–Ω–µ–µ –Ω–∞ <b>–∫–∞–∫–æ–º –º–µ—Å—Ç–µ –≤ –º–µ—Ç–µ –æ–Ω –Ω–∞—Ö–æ–¥–∏—Ç—Å—è</b>, –ø–æ-—ç—Ç–æ–º—É —Å–Ω–∞—á–∞–ª–∞ —Å–æ–≤–µ—Ç—É–µ–º –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å <b>–∞–∫—Ç—É–∞–ª—å–Ω—ã–π —Å–ø–∏—Å–æ–∫ –º–µ—Ç—ã</b>.\n\n<b>–ï—Å–ª–∏ —É –±–æ–π—Ü–∞ 5 ‚≠êÔ∏è</b>\n<b>‚≠êÔ∏è10 –∑–≤—ë–∑–¥</b> - 5 —Ä–∞–Ω–≥–æ–≤ ( –±–æ–µ—Ü –ø–æ–ª–Ω–æ—Å—Ç—å—é –ø—Ä–æ–∫–∞—á–µ–Ω )\n<b>‚≠êÔ∏è15 –∑–≤—ë–∑–¥</b> - 5 —Ä–∞–Ω–≥–æ–≤ ( –±–æ–µ—Ü –Ω–µ –ø–æ–ª–Ω–æ—Å—Ç—å—é –ø—Ä–æ–∫–∞—á–µ–Ω )\n<b>‚≠êÔ∏è20 –∑–≤—ë–∑–¥</b> - 5 —Ä–∞–Ω–≥–æ–≤ ( –±–æ–µ—Ü –Ω–µ –ø—Ä–æ–∫–∞—á–∞–Ω )\n\n–ï—Å–ª–∏ —É –±–æ–π—Ü–∞ –Ω–∞ <b>1 ‚≠êÔ∏è –º–µ–Ω—å—à–µ</b>, —Ç–æ –∫ —Å—É–º–º–µ –≤—ã –¥–æ–±–∞–≤–ª—è–µ—Ç–µ <b>+5 –∑–≤—ë–∑–¥‚≠êÔ∏è</b>.", callback.message.chat.id, callback.message.message_id, reply_markup=markup2, parse_mode="html")

    elif callback.data == "prokachka":
        bot.edit_message_text("<b><u>üîù–ü—Ä–æ–∫–∞—á–∫–∞:</u></b>:\n<b>1 –±–æ–µ—Ü</b>:\n<b>‚≠êÔ∏è70 –∑–≤—ë–∑–¥</b> - LvL 0 üîú LvL 11\n<b>‚≠êÔ∏è150 –∑–≤—ë–∑–¥</b> - LvL 0 üîú LvL 11 + –≥–∞–¥–∂–µ—Ç—ã, –ø–∞—Å–∏–≤–∫–∏, –≥–∏–ø–µ—Ä–∑–∞—Ä—è–¥\n\n<b>X –±–æ–π—Ü–∞(-—Ü–æ–≤)</b>:\n<b>‚≠êÔ∏è70 –∑–≤—ë–∑–¥ ‚úñÔ∏è –±–æ–π—Ü—ã</b> - ( LvL 0 üîú LvL 11 )\n<b>‚≠êÔ∏è150 –∑–≤—ë–∑–¥ ‚úñÔ∏è –±–æ–π—Ü—ã</b> - ( LvL 0 üîú LvL 11 + –≥–∞–¥–∂–µ—Ç—ã, –ø–∞—Å–∏–≤–∫–∏, –≥–∏–ø–µ—Ä–∑–∞—Ä—è–¥ )", callback.message.chat.id, callback.message.message_id, reply_markup=markup2, parse_mode="html")

    elif callback.data == "help":
        bot.edit_message_text( "<b>–ü–æ–º–æ—â—å c:</b>", callback.message.chat.id, callback.message.message_id, reply_markup=markup3, parse_mode="html")

    elif callback.data == "exit":
        bot.edit_message_text("<b>–ù–∞–ø–∏—à–∏—Ç–µ /start</b>", callback.message.chat.id, callback.message.message_id,
                              parse_mode="html")




bot.polling(none_stop=True)